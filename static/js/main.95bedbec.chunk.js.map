{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","Math","round","map","ingredient","text","random","App","useState","recipes","setRecipes","search","setSearch","searchQuery","setSearchQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAqBeA,EAhBA,SAAC,GACf,IADgBC,EACjB,EADiBA,MAAOC,EACxB,EADwBA,SAAUC,EAClC,EADkCA,MAAOC,EACzC,EADyCA,YAErC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAML,MAArB,SAA6BA,IAC7B,qBAAKI,UAAWC,IAAMH,MAAOK,IAAKL,EAAOM,IAAI,KAC7C,mBAAGJ,UAAWC,IAAMJ,SAApB,mBAAkCQ,KAAKC,MAAMT,GAA7C,eACA,oBAAIG,UAAWC,IAAMF,YAArB,SACKA,EAAYQ,KAAI,SAAAC,GAAU,OACvB,6BAAiCA,EAAWC,MAAnCJ,KAAKK,OAAO,EAAG,eCgD7BC,MAxDf,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOyBJ,mBAAS,WAPlC,mBAONK,EAPM,KAOOC,EAPP,KASbC,qBAAU,WAERC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,+EAIUC,MAAM,mCAAD,OAAoCL,EAApC,mBAhBnB,WAgBmB,oBAflB,qCAWG,cAIPM,EAJO,gBAKMA,EAASC,OALf,OAKPC,EALO,OAObX,EAAWW,EAAKC,MAPH,kDAWbC,QAAQC,IAAI,6BAXC,0DAAH,qDA2BhB,OACE,sBAAK5B,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAc6B,SAThB,SAAAC,GAEhBA,EAAEC,iBACFb,EAAeH,GACfC,EAAU,KAKR,UACE,uBAAOgB,KAAK,OAAOhC,UAAU,aAAaiC,YAAY,uBAAuBC,MAAOnB,EAAQoB,SAf7E,SAAAL,GAEnBd,EAAUc,EAAEM,OAAOF,UAcf,wBAAQF,KAAK,SAAShC,UAAU,gBAAhC,uBAEF,qBAAKA,UAAU,UAAf,SACGa,EAAQN,KAAI,SAAAL,GAAM,OACjB,cAAC,EAAD,CAAQN,MAAOM,EAAOA,OAAOmC,MAAOxC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MAAOC,YAAaG,EAAOA,OAAOH,aAAkBG,EAAOA,OAAOmC,gBC3CxJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,SAAW,yBAAyB,YAAc,+B","file":"static/js/main.95bedbec.chunk.js","sourcesContent":["import React, {} from 'react';\r\n\r\n//Importing CSS style\r\nimport style from \"../recipe.module.css\";\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) =>\r\n{\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1 className={style.title}>{title}</h1>\r\n            <img className={style.image} src={image} alt=\"\"/>\r\n            <p className={style.calories}>{`${Math.round(calories)} Calories`}</p>\r\n            <ol className={style.ingredients}>\r\n                {ingredients.map(ingredient => (\r\n                    <li key={Math.random(1, 10000)}>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//Importing components\nimport Recipe from './components/Recipe'\n\nfunction App() {\n\n  const APP_ID = \"7043dba8\";\n  const APP_KEY = \"477868d1d2d6f029700ba9354117fce8\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"chicken\");\n\n  useEffect(() =>\n  {\n    getRecipes();\n  },[searchQuery]);\n\n  const getRecipes = async () =>\n  {\n    try\n    {\n        const response = await fetch(`https://api.edamam.com/search?q=${searchQuery}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n        const data = await response.json();\n\n        setRecipes(data.hits);\n    } \n    catch (e) \n    {\n        console.log(\"Error fetching recipe API\");\n    }\n  };\n\n  const updateSearch = e =>\n  {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e =>\n  {\n    e.preventDefault();\n    setSearchQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input type=\"text\" className=\"search-bar\" placeholder=\"Enter a food type...\" value={search} onChange={updateSearch}/>\n        <button type=\"submit\" className=\"search-button\">Search</button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map(recipe => (\n          <Recipe title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients} key={recipe.recipe.label}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2iXV9\",\"title\":\"recipe_title__3fVsx\",\"image\":\"recipe_image__1QK8G\",\"calories\":\"recipe_calories__2709_\",\"ingredients\":\"recipe_ingredients__2yli0\"};"],"sourceRoot":""}